
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       6080;
        server_name  localhost;
 
        location / {
            auth_request /auth;
            error_page 401 = @error401;
            
            default_type 'text/plain';
            set $aa "";
            rewrite_by_lua '
                t = {}
                if ngx.var.http_cookie then
                s = ngx.var.http_cookie
                  for k, v in string.gmatch(s, "(%w+)=([%w%/%.%%=_-]+)") do
                      t[k] = v
                  end
                end
                if (t["authorization"] ~= nil) then
                  ss = string.gsub(t["authorization"], "%%(%x%x)", function(h) return string.char(tonumber(h, 16)) end)
                  ngx.var.aa="Basic "..ss
                end
            ';

            proxy_set_header Authorization $aa; 
            proxy_pass http://10.1.236.58:6080;
        }


        location /auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_pass http://10.1.236.197:3002/auth;
        }

        location @error401 {
            add_header Set-Cookie "redirect=$scheme://$http_host$request_uri;Path=/;Max-Age=3000";
            return 302 http://10.1.236.197:3002/login?port=$server_port;
        }
    }

    server {
        listen       9009;
        server_name  localhost;

        location /hello {
            default_type 'text/plain';
            content_by_lua 'ngx.say("hello, lua")';
        }
    }

    server {
        listen       50070;
        server_name  localhost;

        location / {
            auth_request /auth;
            error_page 401 = @error401;

            proxy_pass http://10.1.236.145:50070;
        }
        location /auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            
            proxy_pass http://10.1.236.197:3002/auth;
        }

        location @error401 {
            
            add_header Set-Cookie "redirect=$scheme://$http_host$request_uri;Path=/;Max-Age=3000";
            return 302 http://10.1.236.197:3002/login?port=$server_port;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen       9001;
        server_name  localhost;

        #auth_basic "User Authentication";
        #auth_basic_user_file /usr/local/nginx/conf/pass.db;
        #access_log  logs/host.access.log  main;
 
        location / {
            auth_request /auth;
            error_page 401 = @error401;

            default_type 'text/plain';
            set $aa "";
            rewrite_by_lua '
                t = {}
                if ngx.var.http_cookie then
                s = ngx.var.http_cookie
                  for k, v in string.gmatch(s, "(%w+)=([%w%/%.%%=_-]+)") do
                      t[k] = v
                  end
                end
                if (t["authorization"] ~= nil) then
                  ss = string.gsub(t["authorization"], "%%(%x%x)", function(h) return string.char(tonumber(h, 16)) end)
                  ngx.var.aa="Basic "..ss
                end
            ';

            #echo "res = $aa";
            proxy_set_header Authorization $aa; 
            proxy_pass http://10.1.236.145:8080;
        }


        location /auth {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_pass http://10.1.236.197:3002/auth;
        }

        location @error401 {
            add_header Set-Cookie "redirect=$scheme://$http_host$request_uri;Path=/;Max-Age=3000";
            return 302 http://10.1.236.197:3002/login?port=$server_port;
        }
       
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
